plugins {
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    implementation "org.flywaydb:flyway-core"

    implementation "org.postgresql:postgresql"

    implementation "org.hibernate.orm:hibernate-core:${Versions.HIBERNATE_CORE}"
    implementation "org.hibernate.validator:hibernate-validator:${Versions.HIBERNATE_VALIDATOR}"

    implementation "jakarta.validation:jakarta.validation-api:${Versions.JAKARTA_VALIDATION_API}"
    implementation "jakarta.persistence:jakarta.persistence-api:${Versions.JAKARTA_PERSISTENCE_API}"

    implementation "org.springframework:spring-instrument:${Versions.SPRING_INSTRUMENT}"
    implementation "org.springframework:spring-web:${Versions.SPRING_WEB}"

    implementation "io.jsonwebtoken:jjwt-api:${Versions.JJWT}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${Versions.JJWT}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${Versions.JJWT}"

    implementation "org.springframework.security:spring-security-core:${Versions.SPRING_SECURITY}"
    implementation "org.springframework.security:spring-security-config:${Versions.SPRING_SECURITY}"
    implementation "org.springframework.security.oauth:spring-security-oauth2:${Versions.SPRING_SECURITY_OAUTH2}"
    implementation "org.springframework.security:spring-security-oauth2-resource-server:" +
            "${Versions.SPRING_SECURITY}"
    implementation "org.springframework.security:spring-security-oauth2-jose:${Versions.SPRING_SECURITY}"

    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.mockito:mockito-core"
    testImplementation "ch.qos.logback:logback-classic:${Versions.LOGBACK_CLASSIC}"
}

compileJava.options.encoding = 'UTF-8'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.with {
        encoding = 'UTF-8'
        compilerArgs += ["-parameters"]
    }
}